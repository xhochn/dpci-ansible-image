name: Build, Test, and Release Docker Image

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

env:
  IMAGE_NAME: dpci-ansible-image
  DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/dpci-ansible-image

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.generate_tag.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate version tag (main only)
        id: generate_tag
        if: github.ref == 'refs/heads/main'
        run: |
          latest_tag=$(git tag -l 'v0.0.*' | sort -V | tail -n1)
          if [ -z "$latest_tag" ]; then
            next_tag="v0.0.1"
          else
            patch=$(echo $latest_tag | cut -d. -f3)
            next_tag="v0.0.$((patch + 1))"
          fi
          echo "Generated tag: $next_tag"
          echo "tag=$next_tag" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub for cache access
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image (local tag only, multi-arch)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          load: true  # load into local Docker daemon
          tags: ${{ env.IMAGE_NAME }}:local
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    name: Smoke Test Image
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Run smoke tests
        run: |
          docker run --rm dpci-ansible-image:local sh -c "echo âœ… Shell OK"
          docker run --rm dpci-ansible-image:local ansible --version
          docker run --rm dpci-ansible-image:local pre-commit --version

  tag-and-push:
    name: Tag & Push (main only)
    needs: [build, test]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Rebuild and push multi-arch image with tags
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.DOCKERHUB_REPO }}:${{ needs.build.outputs.image-tag }}
            ${{ env.DOCKERHUB_REPO }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create and push Git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          if git tag | grep -q "^${{ needs.build.outputs.image-tag }}$"; then
            echo "Tag already exists. Skipping."
            exit 1
          fi

          git tag ${{ needs.build.outputs.image-tag }}
          git push origin ${{ needs.build.outputs.image-tag }}
